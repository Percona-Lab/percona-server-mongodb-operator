apiVersion: psmdb.percona.com/v1alpha1
kind: PerconaServerMongoDB
metadata:
  name: my-cluster-name
spec:
  pause: false
  #platform: openshift
  image: perconalab/percona-server-mongodb-operator:master-mongod3.6
  # imagePullSecrets:
  #   - name: private-registry-credentials
  imagePullPolicy: Always
  secrets:
    key: my-cluster-name-mongodb-key
    users: my-cluster-name-mongodb-users
  pmm:
    enabled: false
    image: perconalab/pmm-client-fb:v.1.17.2-18536d0
    serverHost: monitoring-service
  replsets:
  - name: rs0
    size: 3
    expose:
      enabled: false
      exposeType: LoadBalancer
    arbiter:
      enabled: true
      size: 1
    resources:
      limits:
        cpu: "300m"
        memory: "0.5G"
      requests:
        cpu: "300m"
        memory: "0.5G"
      storage: "3Gi"
    #storageClass: aws-gp2
  mongod:
    net:
      port: 27017
      hostPort: 0
    security:
      redactClientLogData: false
    setParameter:
      ttlMonitorSleepSecs: 60
      wiredTigerConcurrentReadTransactions: 128
      wiredTigerConcurrentWriteTransactions: 128
    storage:
      engine: wiredTiger
      inMemory:
        engineConfig:
          inMemorySizeRatio: 0.9
      mmapv1:
        nsSize: 16
        smallfiles: false
      wiredTiger:
        engineConfig:
          cacheSizeRatio: 0.5
          directoryForIndexes: false
          journalCompressor: snappy
        collectionConfig:
          blockCompressor: snappy
        indexConfig:
          prefixCompression: true
    operationProfiling:
      mode: slowOp
      slowOpThresholdMs: 100
      rateLimit: 1
    #auditLog:
    #  destination: file
    #  format: BSON
    #  filter: '{}'
  backup:
    enabled: true
    debug: true
    restartOnFailure: true
    image: "perconalab/percona-server-mongodb-operator:0.3.0-backup"
    coordinator:
      enableClientsLogging: true
      resources:
        limits:
          cpu: "100m"
          memory: "0.2G"
        requests:
          cpu: "100m"
          memory: "0.1G"
          storage: "1Gi"
      #storageClass: aws-gp2
    storages:
      s3-us-west:
        type: s3
        s3:
          bucket: S3-BACKUP-BUCKET-NAME-HERE
          credentialsSecret: my-cluster-name-backup-s3
          region: us-west-2
      #minio:
      #  type: s3
      #  s3:
      #    bucket: MINIO-BACKUP-BUCKET-NAME-HERE
      #    region: us-west-1
      #    credentialsSecret: my-cluster-name-backup-minio
      #    endpointUrl: http://minio.psmdb.svc.cluster.local:9000/minio/
    tasks:
      - name: daily-s3-us-west
        enabled: true
        schedule: "0 0 * * *"
        storageName: s3-us-west
        compressionType: gzip
      - name: weekly-s3-us-west
        enabled: false
        schedule: "0 0 * * 0"
        storageName: s3-us-west
        compressionType: gzip