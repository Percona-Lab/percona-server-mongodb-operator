apiVersion: batch/v1beta1
kind: CronJob
metadata:
  labels:
    app.kubernetes.io/component: backup-schedule
    app.kubernetes.io/instance: some-name
    app.kubernetes.io/managed-by: percona-server-mongodb-operator
    app.kubernetes.io/name: percona-server-mongodb
    app.kubernetes.io/part-of: percona-server-mongodb
    app.kubernetes.io/replset: general
  name: some-name-backup-every-min-aws-s3
  ownerReferences:
  - apiVersion: apps/v1
    controller: true
    kind: StatefulSet
    name: some-name-backup-coordinator
spec:
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 1
  jobTemplate:
    metadata:
      labels:
        app.kubernetes.io/component: backup-schedule
        app.kubernetes.io/instance: some-name
        app.kubernetes.io/managed-by: percona-server-mongodb-operator
        app.kubernetes.io/name: percona-server-mongodb
        app.kubernetes.io/part-of: percona-server-mongodb
        app.kubernetes.io/replset: general
    spec:
      template:
        metadata:
        spec:
          containers:
          - args:
            - -c
            - "\n\t\t\tcat <<-EOF | /usr/bin/kubectl apply -f -\n\t\t\t\tapiVersion:
              psmdb.percona.com/v1alpha1\n\t\t\t\tkind: PerconaServerMongoDBBackup\n\t\t\t\tmetadata:\n\t\t\t\t
              \ name: \"cron-${psmdbCluster:0:16}-$(date -u \"+%Y%m%d%H%M%S\")-${suffix}\"\n\t\t\t\t
              \ labels:\n\t\t\t\t    ancestor: \"every-min-aws-s3\"\n\t\t\t\t    cluster:
              \"${psmdbCluster}\"\n\t\t\t\t    type: \"cron\"\n\t\t\t\tspec:\n\t\t\t\t
              \ psmdbCluster: \"${psmdbCluster}\"\n\t\t\t\t  storageName: \"aws-s3\"\n\t\t\tEOF\n\t\t"
            command:
            - sh
            env:
            - name: psmdbCluster
              value: some-name
            imagePullPolicy: IfNotPresent
            name: backup-pmbctl
            resources: {}
            securityContext:
              runAsNonRoot: true
              runAsUser: 1001
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext:
            fsGroup: 1001
          terminationGracePeriodSeconds: 30
  schedule: '* * * * *'
  successfulJobsHistoryLimit: 3
  suspend: false
