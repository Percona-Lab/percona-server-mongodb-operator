#!/bin/bash

set -o errexit
set -o xtrace

test_dir=$(realpath $(dirname $0))
. ${test_dir}/../functions

create_namespace $namespace
deploy_operator

desc 'create first PSMDB cluster'
cluster="some-name-rs0"
kubectl apply \
	-f $conf_dir/secrets.yml \
	-f $conf_dir/$cluster.yml \
	-f $conf_dir/client.yml
desc 'check if all 3 Pods started'
wait_for_running $cluster 3

desc 'check if service and statefulset created with expected config'
compare_kubectl statefulset/$cluster
compare_kubectl service/$cluster

desc 'check if users created'
compare_mongo_user "userAdmin:userAdmin123456@$cluster.$namespace"
compare_mongo_user "backup:backup123456@$cluster.$namespace"
compare_mongo_user "clusterAdmin:clusterAdmin123456@$cluster.$namespace"
compare_mongo_user "clusterMonitor:clusterMonitor123456@$cluster.$namespace"
# check that test user don't have access
compare_mongo_user "test:test@$cluster.$namespace"

desc 'write data, read from all'
run_mongo \
	'db.createUser({user:"myApp",pwd:"myPass",roles:[{db:"myApp",role:"readWrite"}]})' \
	"userAdmin:userAdmin123456@$cluster.$namespace"
run_mongo \
	'use myApp\n db.test.insert({ x: 100500 })' \
	"myApp:myPass@$cluster.$namespace"
compare_mongo_cmd "find" "myApp:myPass@$cluster-0.$cluster.$namespace"
compare_mongo_cmd "find" "myApp:myPass@$cluster-1.$cluster.$namespace"
compare_mongo_cmd "find" "myApp:myPass@$cluster-2.$cluster.$namespace"

desc 'kill Primary Pod, check reelection, check data'
initial_primary=$(get_mongo_primary "clusterAdmin:clusterAdmin123456@$cluster.$namespace")
kubectl delete pods --grace-period=0 --force $initial_primary
wait_for_running $cluster 3
changed_primary=$(get_mongo_primary "clusterAdmin:clusterAdmin123456@$cluster.$namespace")
[ "$initial_primary" != "$changed_primary" ]
compare_mongo_cmd "find" "myApp:myPass@$cluster-0.$cluster.$namespace"
compare_mongo_cmd "find" "myApp:myPass@$cluster-1.$cluster.$namespace"
compare_mongo_cmd "find" "myApp:myPass@$cluster-2.$cluster.$namespace"

desc 'check if possible to create second cluster'
cluster2="another-name-rs0"
kubectl apply -f $test_dir/conf/$cluster2.yml
sleep 2
desc 'check if service and statefulset created'
compare_kubectl service/$cluster2
desc 'check if storageClass changed'
compare_kubectl statefulset/$cluster2
kubectl delete -f $test_dir/conf/$cluster2.yml

destroy $namespace
